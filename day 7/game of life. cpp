// without using extra space
class Solution {
public:
    void helper(int i, int j, int n, int m, vector<vector<int>>& board) {
        int drow[] = {0, 0, 1, -1, -1, -1, 1, 1};
        int dcol[] = {1, -1, 0, 0, 1, -1, 1, -1};
        int c1 = 0;
        for (int k = 0; k < 8; k++) {
            int nrow = i + drow[k];
            int ncol = j + dcol[k];
            if (nrow >= 0 && ncol >= 0 && nrow < n && ncol < m &&
                abs(board[nrow][ncol]) == 1)
                c1++;
        }
        if (board[i][j] == 1 && (c1 < 2 || c1 > 3))
            board[i][j] = -1;
        else if (board[i][j] == 0 && c1 == 3)
            board[i][j] = 2;
    }

    void gameOfLife(vector<vector<int>>& board) {
        int n = board.size();
        int m = board[0].size();
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                helper(i, j, n, m, board);
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == -1)
                    board[i][j] = 0;
                else if (board[i][j] == 2)
                    board[i][j] = 1;
            }
        }
    }
};


// using extra space
class Solution {
public:
    void helper(int i, int j, int n, int m,vector<vector<int>>& board, vector<vector<int>>& ans){
        int drow[]={0,0,1,-1,-1,-1,1,1};
        int dcol[]={1,-1,0,0,1,-1,1,-1};
        int c1=0,c2=0;
        for(int k=0;k<8;k++){
            int nrow=i+drow[k];
            int ncol=j+dcol[k];
            if(nrow>=0 && ncol>=0 && nrow<n && ncol<m && board[nrow][ncol]==1)
            c1++;
        }
        if(board[i][j]==1 && c1<2)
        ans[i][j]=0;
        else if(board[i][j]==1 && (c1==2 || c1==3))
        ans[i][j]=1;
        else if(board[i][j]==1 && c1>3)
        ans[i][j]=0;
        else if(board[i][j]==0 && c1==3)
        ans[i][j]=1;

    }

    void gameOfLife(vector<vector<int>>& board) {
        vector<vector<int>>ans=board;
        int n=board.size();
        int m=board[0].size();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                helper(i,j,n,m,board,ans);
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
               board[i][j]=ans[i][j];
            }
        }
        
    }
};
